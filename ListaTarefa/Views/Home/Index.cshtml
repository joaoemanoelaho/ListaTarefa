@model IEnumerable<Tarefa>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <div class="container uk-flex uk-flex-center uk-flex-column">
        <form class="uk-flex uk-flex-between">
            <div class="uk-flex">
                <div class="uk-flex uk-flex-middle uk-margin-right">
                    <div class="uk-inline">
                        <span class="uk-form-icon" uk-search-icon></span>
                        <input class="uk-input fundo-cinza-escuro" id="pesquisar" type="text"
                            aria-label="Not clickable icon" placeholder="Pesquisar tarefas...">
                    </div>
                </div>
                <div class="uk-margin uk-grid-small uk-child-width-auto uk-grid checkbox-filtro">
                    <label><input class="uk-checkbox" id="urgente" onchange="listarUrgente()" type="checkbox">
                        Urgente</label>
                    <label><input class="uk-checkbox" id="pendente" onchange="listarPendente()" type="checkbox">
                        Pendente</label>
                    <label><input class="uk-checkbox" id="concluida" onchange="listarConcluida()" type="checkbox">
                        Concluidos</label>
                </div>
            </div>
            <p uk-margin>
                <button class="uk-button cor-texto-branco uk-button-small fundo-azul-escuro" type="button"
                    uk-toggle="target: #modal-adicionar-tarefa">Nova Tarefa</button>
            </p>

            <div id="modal-adicionar-tarefa" uk-modal>
                <div class="uk-modal-dialog uk-modal-body uk-margin-auto-vertical uk-width-1-4">
                    <h2 class="uk-modal-title uk-text-bold">Criar Tarefa</h2>
                    <div class="uk-margin">
                        <label class="uk-form-label" for="descricao">Tarefa</label>
                        <div class="uk-form-controls">
                            <input class="uk-input fundo-cinza-escuro" id="descricao" name="Descricao" type="text"
                                placeholder="Insira a tarefa" required />
                        </div>
                    </div>
                    <div class="uk-margin">
                        <label class="uk-form-label" for="dataVencimento">Data de Vencimento</label>
                        <div class="uk-form-controls">
                            <input class="uk-input fundo-cinza-escuro" id="dataVencimento" name="DataVencimento"
                                type="date" placeholder="Insira a Data de Vencimento" required />
                        </div>
                    </div>
                    <p class="uk-text-right" uk-margin>
                        <button class="uk-button uk-button-default uk-modal-close uk-button-small"
                            type="button">Cancelar</button>
                        <button class="uk-button fundo-azul-escuro uk-button-small cor-texto-branco"
                            onclick="cadastrar()" type="submit">Salvar</button>
                    </p>
                </div>
            </div>
        </form>

        <div style="height:500px; overflow-y:scroll; display: block;">
            <table class="uk-table uk-table-middle uk-table-divider maximo-tabela">
                <thead>
                    <tr>
                        <th class="uk-width-medium">Tarefa</th>
                        <th class="uk-text-center uk-width-medium">Data Vencimento</th>
                        <th class="uk-text-center uk-width-medium">Urgente</th>
                        <th class="uk-width-medium"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (@Model != null && @Model.Any())
                    {
                        foreach (var tarefa in @Model)
                        {


                            <tr class="linha-tarefa" data-concluido="@tarefa.Concluido">
                                <td class="descricao">
                                    <label class="checkbox-concluido"><input class="uk-checkbox concluido" data-id="@tarefa.Id"
                                            @(@tarefa.Concluido ? "checked" : "") type="checkbox"></label>
                                    @tarefa.Descricao
                                </td>
                                <td class="uk-text-center">@tarefa.DataVencimento.Value.ToString("dd/MM/yyyy")
                                </td>
                                <td>
                                    @{
                                        var totalDias = (int)(@tarefa.DataVencimento.Value - DateTime.Now).TotalDays;
                                    }
                                    <div class="uk-text-center"><span
                                            class="uk-badge @(totalDias <= 0 ? "uk-label-danger" : "")">@(totalDias <= 0 ? "Sim"
                                                                                : "Não")</span></div>
                        </td>
                        <td>
                            <div class="uk-text-right "><button class="botao-lixeira excluir" data-id="@tarefa.Id"
                                    type="button" uk-icon="trash"></button>
                            </div>
                        </td>
                    </tr>
                                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

<script>

    function dataFormatada(d) {
        var data = new Date(d),
            dia = data.getDate().toString().padStart(2, '0'),
            mes = (data.getMonth() + 1).toString().padStart(2, '0'),
            ano = data.getFullYear();
        return [ano, mes, dia].join('-');
    }

    function cadastrar() {
        var descricao = $('#descricao').val();
        var dataVencimento = $('#dataVencimento').val();

        const obj = {
            descricao,
            dataVencimento
        }

        $('.descricao').each(function () {
            if ($(this).text() == descricao && tarefa.Concluido == true) {
                console.log("passou aqui")
            }
            console.log($(this).text());
        })

        const date = Date.now();

        if (dataVencimento < dataFormatada(date)) {
            UIkit.notification({
                message: 'Erro: data inválida!',
                status: 'danger',
                pos: 'top-center',
                timeout: 1500,
            });
            return;
        }


        $.post('@Url.Action("Create", "Home")', obj)
            .done(function () {
                window.location.href = '@Url.Action("Index", "Home")';
            })
            .fail(function () {
                UIkit.notification({
                    message: 'Erro ao cadastrar tarefa!',
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 1500,
                });
            });
    }

    function listarPendente() {
        var isChecked = $("#pendente").is(":checked")
        $(".linha-tarefa").each(function () {
            var concluido = $(this).data("concluido");
            if (isChecked && concluido.toLowerCase() == "true") {
                $(this).hide();
            } else {
                $(this).show();
            }
        });
    }

    function listarUrgente() {
        var isChecked = $("#urgente").is(":checked")
        console.log(isChecked)
        $(".linha-tarefa").each(function () {
            var urgente = $(this).find(".uk-label-danger").length == 1;
            console.log(urgente)
            if (isChecked && !urgente) {
                $(this).hide();
            } else {
                $(this).show();
            }
        });
    }

    function listarConcluida() {
        var isChecked = $("#concluida").is(":checked")
        $(".linha-tarefa").each(function () {
            var concluido = $(this).data("concluido");
            if (isChecked && concluido.toLowerCase() == "false") {
                $(this).hide();
            } else {
                $(this).show();
            }
        });
    }

    $('#pesquisar').keyup(function () {
        var text = $(this).val().toLowerCase();
        console.log(text);
        $(".linha-tarefa").each(function () {
            var nome = $(this).find(".descricao").text().toLowerCase();
            console.log(nome, text)
            if (!text.includes(nome)) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
    });


    $(document).ready(function () {
        $('.concluido').click(function () {
            var botaoClicado = $(this);
            var id = $(this).data('id');

            $.post('@Url.Action("AlternarConcluido", "Home")', {
                Id: id
            }).done(function () {
                window.location.reload();
            }).fail(function () {
                alert('Erro ao alterar botao de concluido!');
            });
        });
    });


    $(document).ready(function () {
        $('.excluir').click(function () {
            var botaoClicado = $(this);
            var id = $(this).data('id');
            var linha = $(this).closest('tr');

            $.post('@Url.Action("Delete", "Home")', {
                Id: id
            }).done(function () {
                linha.remove();
                window.location.reload();
            }).fail(function () {
                alert('Erro ao excluir tarefa!');
            });
        });
    });
</script>
